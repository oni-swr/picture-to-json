spring:
  application:
    name: picture-to-json
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: password
    
  h2:
    console:
      enabled: true
      path: /h2-console
      
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        
  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
      
# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Application Configuration
app:
  upload:
    directory: ${java.io.tmpdir}/picture-to-json/uploads
  ocr:
    tesseract:
      data-path: ${java.io.tmpdir}/tessdata
      language: eng
    
# Logging Configuration
logging:
  level:
    com.picturetojson: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
    
---
# Production Profile
spring:
  config:
    activate:
      on-profile: production
      
  datasource:
    url: jdbc:postgresql://localhost:5432/picturetojson
    username: ${DB_USERNAME:pictureuser}
    password: ${DB_PASSWORD:picturepass}
    
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate